---
- name: Add grafana gpg key
  shell: curl https://packages.grafana.com/gpg.key | apt-key add -
  become: true

- name: Add grafana repo
  apt_repository:
    repo: deb https://packages.grafana.com/oss/deb stable main
    state: present
    filename: grafana
  become: true

- name: Install grafana
  apt:
    name:
      - grafana
      - prometheus
    state: present
    update_cache: yes
  become: true

- name: Update grafana admin password
  ansible.builtin.lineinfile:
    path: "/etc/grafana/grafana.ini"
    regexp: '^;admin_password ='
    line: "admin_password = {{ grafana_admin_password }}"
  become: true

- name: Update grafana db config
  ansible.builtin.blockinfile:
    path: "/etc/grafana/grafana.ini"
    insertafter: "[database]"
    block: |
      url = postgres://grafana:{{ grafana_psql_password }}@localhost:5432/grafana
  become: true

- name: Enable and start grafana-server service
  service:
    name: grafana-server
    state: restarted
    enabled: true
  become: true

- name: "Create config directories"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 'u=rwX,g=rX,o='
    recurse: true
  with_items:
    - "/etc/loki/"
  become: true

- name: "Copy configuration files"
  ansible.builtin.template:
    src: "{{ item.in }}"
    dest: "{{ item.out }}"
    owner: "root"
    group: "root"
    mode: 0644
  become: true
  with_items:
    - { in: 'datasources/prometheus.yml.j2', out: '/etc/grafana/provisioning/datasources/prometheus.yml' }
    - { in: 'prometheus.yml.j2', out: '/etc/prometheus/prometheus.yml' }
    - { in: 'alertmanager.yml.j2', out: '/etc/prometheus/alertmanager.yml' }
    - { in: 'loki.yml.j2', out: '/etc/loki/local-config.yaml' }

- name: "Restart prometheus service"
  ansible.builtin.service:
    name: "prometheus.service"
    state: restarted
    enabled: true
  become: true
  notify: "reload systemd"
