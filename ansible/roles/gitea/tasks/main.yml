---
- name: "Check gitea version"
  shell: "set -eo pipefail; /usr/local/bin/gitea -v | cut -d' ' -f 3"
  args:
    executable: /bin/bash
  register: gitea_active_version
  changed_when: false
  failed_when: false

- name: "Get latest Gitea version"
  shell: "/usr/local/bin/get_latest_github_release --repo 'go-gitea/gitea'"
  register: gitea_version

- set_fact: gitea_gpg_key="7C9E68152594688862D62AF62D9AE806EC1592E2"
- set_fact: gitea_version="{{ gitea_version.stdout | regex_replace('v', '') }}"
- set_fact: gitea_dl_url="https://dl.gitea.io/gitea/{{ gitea_version }}/gitea-{{ gitea_version }}-linux-{{ gitea_platform }}"

- name: "Create Gitea Group"
  group:
    name: "git"
    system: true
    state: "present"
  become: true

- name: "Create Gitea user"
  ansible.builtin.user:
    name: "git"
    comment: "Gitea user"
    home: "/home/git"
    shell: "/bin/bash"
    system: true
  become: true

- name: "Create config and data directory"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "git"
    group: "git"
    mode: '0755'
  with_items:
    - "/etc/gitea"
  become: true

- name: "Create data directory"
  file:
    path: "{{ item }}"
    state: directory
    owner: "git"
    group: "git"
    mode: 'u=rwX,g=rX,o='
    recurse: true
  with_items:
    - "/home/git"
    - "/home/git/data"
    - "/home/git/custom"
    - "/home/git/custom/https"
    - "/home/git/custom/mailer"
    - "/home/git/indexers"
    - "/home/git/log"
    - "/var/lib/gitea"
  become: true

- name: "Configure gitea"
  ansible.builtin.template:
    src: app.ini.j2
    dest: /etc/gitea/app.ini
    owner: "git"
    group: "git"
    mode: 0600
  become: true

- name: Install dependencies
  package:
    name:
      - git
      - gnupg2
      - xz-utils
    state: present
  register: _install_dep_packages
  until: _install_dep_packages is succeeded
  retries: 5
  delay: 2
  become: true

- block:
    - name: Download gitea archive
      get_url:
        url: "{{ gitea_dl_url }}.xz"
        dest: "/tmp/gitea-{{ gitea_version }}.linux-{{ gitea_platform }}.xz"
        checksum: "sha256:{{ gitea_dl_url }}.xz.sha256"
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2

    - name: Download gitea asc file
      get_url:
        url: "{{ gitea_dl_url }}.xz.asc"
        dest: "/tmp/gitea-{{ gitea_version }}.linux-{{ gitea_platform }}.xz.asc"
      register: _download_asc
      until: _download_asc is succeeded
      retries: 5
      delay: 2

    - name: Check gitea gpg key
      command: "gpg --list-keys 0x{{ gitea_gpg_key }}"
      register: _gitea_gpg_key_status
      changed_when: false
      failed_when: _gitea_gpg_key_status.rc not in (0, 2)

    - name: Import gitea gpg key
      command: "gpg --keyserver keys.openpgp.org --recv {{ gitea_gpg_key }}"
      register: _gitea_import_key
      changed_when: '"imported: 1" in _gitea_import_key.stderr'
      when: _gitea_gpg_key_status.rc != 0

    - name: Check archive signature
      command: "gpg --verify /tmp/gitea-{{ gitea_version }}.linux-{{ gitea_platform }}.xz.asc /tmp/gitea-{{ gitea_version }}.linux-{{ gitea_platform }}.xz"
      changed_when: false

    - name: Unpack gitea binary
      command:
        cmd: "xz -k -d /tmp/gitea-{{ gitea_version }}.linux-{{ gitea_platform }}.xz"
        creates: "/tmp/gitea-{{ gitea_version }}.linux-{{ gitea_platform }}"

    - name: Propagate gitea binary
      copy:
        src: "/tmp/gitea-{{ gitea_version }}.linux-{{ gitea_platform }}"
        remote_src: true
        dest: "/usr/local/bin/gitea"
        mode: 0755
        owner: git
        group: git
  when: gitea_active_version.stdout != gitea_version
  become: true

- name: "Setup systemd service"
  ansible.builtin.template:
    src: gitea.service.j2
    dest: /lib/systemd/system/gitea.service
    owner: root
    group: root
    mode: 0644
  become: true
  notify: "reload systemd"

- name: "Service gitea"
  ansible.builtin.service:
    name: gitea
    state: started
    enabled: true
  when: ansible_service_mgr == "systemd"
  become: true
  notify: "restart gitea"
