[user]
    name = {{ full_name }}
    email = {{ email }}
    signingkey = {{ gpg_key }}
[merge]
    ff = false
[commit]
    verbose = true
    gpgsign = false
[alias]
    fixup = fixup=HEAD
    addu = add -u .
    unstage = reset HEAD
    untracked = status -u .
    untracked-at = status -u
    assume-unchanged = update-index --assume-unchanged
    ls = ls-files
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %C(dim white)(%an)%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    lg2 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    a = apply --index
    p = format-patch --stdout
    co = checkout
    ci = commit
    cp = cherry-pick
    me = merge
    pr = !open "$(git config remote.origin.url)/pull/new/master" # create new PR
    re = rebase
    br = branch
    su = submodule
    rr = reset
    fm = fetch-merge # fetch and merge
    tree = log --graph --pretty=format:'%C(auto)%h - %s [%an] (%C(blue)%ar)%C(auto)%d'
    bigtree = log --graph --decorate --pretty=format:'%C(auto)%d%n%h %s%+b%n(%G?) %an <%ae> (%C(blue)%ad%C(auto))%n'
    hist = log --date=short --pretty=format:'%C(auto)%ad %h (%G?) %s [%an] %d'
    count = shortlog -sn  # give list of who commited to this repo
    open = !open `git config remote.origin.url` # open repo in browser
    issues = !open "$(git config remote.origin.url)/issues" # open repo's issues in browser
    url =! bash -c 'git config --get remote.origin.url | sed -E "s/.+:\\(.+\\)\\.git$/https:\\\\/\\\\/github\\\\.com\\\\/\\\\1/g"' # show url of remote
    gf = commit -a --fixup=HEAD
    po = !git push --set-upstream origin "$(git rev-parse --abbrev-ref HEAD)"
    commit-fast = !git commit -am \"$(echo $(git rev-parse --abbrev-ref HEAD | tr '-' ' ' | awk '{ print toupper(substr($0, 1, 1)) substr($0, 2) }'))\"
    recentb = "!r() { refbranch=$1 count=$2; git for-each-ref --sort=-committerdate refs/heads --format='%(refname:short)|%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' --color=always --count=${count:-20} | while read line; do branch=$(echo \"$line\" | awk 'BEGIN { FS = \"|\" }; { print $1 }' | tr -d '*'); ahead=$(git rev-list --count \"${refbranch:-origin/master}..${branch}\"); behind=$(git rev-list --count \"${branch}..${refbranch:-origin/master}\"); colorline=$(echo \"$line\" | sed 's/^[^|]*|//'); echo \"$ahead|$behind|$colorline\" | awk -F'|' -vOFS='|' '{$5=substr($5,1,70)}1' ; done | ( echo \"ahead|behind||branch|lastcommit|message|author\\n\" && cat) | column -ts'|';}; r"
