#!/usr/bin/env python3

import sys
import json
import requests
import glob
from datetime import datetime
from dateutil.relativedelta import relativedelta

databases = [
    '${SELFOSS_PSQL_DB}',
    '${NEXTCLOUD_PSQL_DB}',
    '${GITEA_PSQL_DB}',
]

def print_config() -> None:
    print("graph_title Postgres backups")
    print("graph_vlabel hours")
    print("graph_args --upper-limit 24 -l 0")
    print("graph_category postgres")
    print("graph_info Number of hours since last postgres backup per database.")

    for db in databases:
        print(f"{db}.label {db}")
        print(f"{db}.warning 0:24")
        print(f"{db}.critical 0:48")


def print_value() -> None:
    for db in databases:
        backups = glob.glob(f'${PSQL_BACKUP_DIR}/{db}-*.zip')
        min_time = 1e4 # hours

        for backup in backups:
            date_str = backup.replace('.zip', '').replace(f'${PSQL_BACKUP_DIR}/{db}-', '')
            date = datetime.strptime(date_str, '%d-%m-%Y_%H-%M-%S')
            tdelta = relativedelta(datetime.now(), date)

            # May be off by a few years, but should be much larger than the minimum
            # tdelta we are looking for anyway.
            diff_large = tdelta.years * (365 * 24) + tdelta.months * (30 * 24) + tdelta.days * 24
            diff = diff_large + tdelta.hours + tdelta.minutes / 60

            if diff < min_time:
                min_time = diff

        print(f'{db}.value {min_time}')


if __name__ == '__main__':
    if len(sys.argv) > 1 and sys.argv[1] == 'config':
        print_config()
    else:
        print_value()
